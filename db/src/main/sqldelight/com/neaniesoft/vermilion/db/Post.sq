CREATE TABLE post (
'id' INTEGER PRIMARY KEY,
'post_id' TEXT NOT NULL,
'query' TEXT NOT NULL,
'inserted_at' INTEGER NOT NULL,
'title' TEXT NOT NULL,
'post_type' TEXT NOT NULL,
'link_host' TEXT NOT NULL,
'thumbnail_uri' TEXT,
'preview_uri' TEXT,
'preview_width' INTEGER,
'preview_height' INTEGER,
'preview_video_width' INTEGER,
'preview_video_height' INTEGER,
'preview_video_dash' TEXT,
'preview_video_hls' TEXT,
'preview_video_fallback' TEXT,
'animated_preview_width' INTEGER,
'animated_preview_height' INTEGER,
'animated_preview_uri' TEXT,
'video_width' INTEGER,
'video_height' INTEGER,
'video_dash' TEXT,
'video_hls' TEXT,
'video_fallback' TEXT,
'link_uri' TEXT NOT NULL,
'preview_text' TEXT,
'community_name' TEXT NOT NULL,
'community_id' TEXT NOT NULL,
'author_name' TEXT NOT NULL,
'posted_at' INTEGER NOT NULL,
'comment_count' INTEGER NOT NULL,
'score' INTEGER NOT NULL,
'flags' TEXT NOT NULL,
'flair_text' TEXT,
'flair_background_color' INTEGER NOT NULL,
'flair_text_color' TEXT NOT NULL,
'gallery_item_uris' TEXT,
'gallery_item_widths' TEXT,
'gallery_item_heights' TEXT
);

CREATE UNIQUE INDEX post_post_id ON post(post_id);
CREATE INDEX post_query ON post(query);

insert:
INSERT INTO post VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?);

deleteByQuery:
DELETE FROM post WHERE query == ?;

lastUpdatedAt:
SELECT inserted_at FROM post WHERE query == ? ORDER BY inserted_at DESC LIMIT 1;

postWithId:
SELECT * FROM post WHERE post_id == ? ORDER BY inserted_at DESC LIMIT 1;

deleteAll:
DELETE FROM post;

postCount:
SELECT count(id) FROM post WHERE query == ?;

updateFlags:
UPDATE post SET flags = ? WHERE post_id == ?;

update:
INSERT OR REPLACE INTO post VALUES (?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?);

postQuery:
SELECT * FROM post
LEFT JOIN postHistory ON postHistory.post_id = post.post_id
WHERE query == :query AND visited_at IS NULL
LIMIT :limit OFFSET :offset;